if(num1==10)
print("success")
else
print("fail")
num1<-15
if(num1==10)
print("success")
else
print("fail")
num1<-15
if(num1==10)
print("success")
else
print("fail");
num1<-15
if(num1==10){
print("success")}
else{
print("fail")
}
num1<-15
if(num1==10){
print("success")
}
else{
print("fail")
}
num1<-15
if(num1==10){
print("success")
}else{
print("fail")
}
x<-switch(2,"ram","shyam","sumit")
x
x<-switch(4,"ram","shyam","sumit")
x
x<-switch(0,"ram","shyam","sumit")
x
x<-switch(2,"ram","shyam","sumit")
x
y<-20
x<-switch(y,"ram","shyam","sumit")
x
y<-20
x<-switch(y,4="ram",10="shyam",20="sumit")
x
y<-"20"
x<-switch(y,"4"=ram","10"=shyam","20"=sumit")
x
y<-"20"
x<-switch(y,"4"="ram","10"="shyam","20"="sumit")
x
x<-1:10
for (val in x) {
if(val==5){
next
}
print(val)
}
x<-1:10
for (val in x) {
if(val==5){
break
}
print(val)
}
x<-1:10
for (val in x) {
if(val==5){
break
}
print(val)
}
a<-1;
repeat
x<-1:10
for (y in 1:10) {
print(y)
}
for (y in 1:10) {
print(paste(y))
}
for (y in 1:10) {
print(paste("num: ",y))
}
f<-c('oange','apple','banana','grapes','mango')
for (y in f) {
print(f)
}
f<-c('oange','apple','banana','grapes','mango')
for (y in f) {
print(paste("frute name is : ",f)
}
f<-c('oange','apple','banana','grapes','mango')
for (y in f) {
print(paste("frute name is : ",f))
}
v<-c("hello","jgdf","jksngkfs")
x<-2
repeat{
print(v)
x<=x+1
if(x>5)
break
}
v<-c("hello","jgdf","jksngkfs")
x<-2
repeat{
print(v)
x<-x+1
if(x>5)
break
}
v<-c("hello","jgdf","jksngkfs")
x<-2
repeat{
print(v)
x<-x+1
if(x>5)
}
v<-c('hello','ghdhdhd','jhgjhdas','sddjkhsv')
x<-2
while (x<6) {
print(v)
x<-x+1
}
name<-readline(prompt = "Enter your name : ")
name<-readline(prompt = "Enter your name : ")
age<-readline(prompt = "age :")
print(age)
print(paste("hello my name is :",name,"age is :",age))
print(paste("hello my name is :",name,"age is :",age))
paste("hello","jhdgad")
paste("hello","jhdgad",sep = "_")
paste0("hello","ajkhjad")
paste0("hello","ajkhjad")
mat<-matrix(c(2:14),nrow = 4,ncol = 4,byrow = FALSE)
print(mat)
emp.data<-data.frame(
employee_id = c(1:5)
employee_name = c('ram','shyam','daksh','patel','dax')
sal = c(522555,545454,5454545,212112,848485)
starting_date = as.Date(c(
'2021-01-25','2025-2-15','2024-2-15','2014-5-14','2036-3-16'))
startingFactors = FALSE
)
print(emp.data)
emp.data<-data.frame(
employee_id = c(1:5)
employee_name = c('ram','shyam','daksh','patel','dax')
sal = c(522555,545454,5454545,212112,848485)
starting_date = as.Date(c(
'2021-01-25','2025-2-15','2024-2-15','2014-5-14','2036-3-16'))
startingFactors = FALSE
)
emp.data<-data.frame(
employee_id = c(1:5),
employee_name = c('ram','shyam','daksh','patel','dax'),
sal = c(522555,545454,5454545,212112,848485),
starting_date = as.Date(c(
'2021-01-25','2025-2-15','2024-2-15','2014-5-14','2036-3-16')),
startingFactors = FALSE
)
print(emp.data)
str(emp.data)
f1<-data.frame(emp.data$employee_name,emp.data$sal)
f1
f2<-emp.data[2,]
f2
print(summary(emp.data))
x
x<-readline(prompt = "enter :")
15
x
x
library(scales)
install.packages("scales")
library(scales)
x<-"daksh"
print(x)
getwd()
View(mtcars)
mtcars''
mtcars
install.packages("ggplot2")
library(ggplot2)
names(mtcars)
ggplot(mtcars,aes(x = drat,y=mpg))
ggplot(mtcars,aes(x = drat,y=mpg)) + geom_abline()
ggplot(mtcars,aes(x = drat,y=mpg)) + geom_point()
data(mtcars)
View(mtcars)
install.packages("dplyr")
library(dplyr)
select(mtcars,mpg,cyl)
arrange(mtcars,mpg)
d->select(mtcars,drat)
d
arrange(d,wt)
filter(mtcars,Maserati Bora)
filter(mtcars,mpg=10.4)
filter(mtcars,mpg==10.4)
filter(mtcars,mpg>10.4)
filter(mtcars,mpg<10.4)
filter(mtcars,mpg>10.4 & mpg<20)
filter(mtcars,mpg==10.4 | mpg==14.7)
mutate(mtcars,pat=cyl*2)
transmute(mtcars,pat=cyl*2)
distinct(mtcars,cyl)
distinct(mtcars,cyl,gear)
summarise(cyl)
summarise(mtcars,cyl)
summarise(mtcars,cyl,qsec)
summarise(mtcars,cyl,total=sum(qsec))
summarise(mtcars,total=sum(qsec))
summarise(mtcars,count=n(),unitqty=sum(qsec),totalam=sum(total))
summarise(mtcars,count=n(),unitqty=sum(qsec),totalam=sum(qsec))
group_by(mtcars,qsec)
slice(mtcars,1:10
)
slice(mtcars,1:10)
install.packages("tidyr")
library(tidyr)
setwd(Downloads)
setwd("Downloads")
install.packages("Rserver")
library(Rserve)
install.packages("Rserve")
library(Rserve)
Rserve()
library(ggplot2) #visualization matplotlib in case of python
library(ggthemes) #add-on with ggplot
library(dplyr) #data manipulation in case of pandas in pythom
library(lubridate) #date and time
library(scales) #grapical scalling
library(tidyr) #tidy data
library(DT)
setwd('C:\\Users\\Lenovo\\Documents\\R\\Uber-dataset')
apr_data <- read.csv("uber-raw-data-apr14.csv")
aug_data <- read.csv("uber-raw-data-aug14.csv")
jul_data <- read.csv("uber-raw-data-jul14.csv")
sep_data <- read.csv("uber-raw-data-sep14.csv")
jun_data <- read.csv("uber-raw-data-jun14.csv")
may_data <- read.csv("uber-raw-data-may14.csv")
#Combining all the data
data_2014<-rbind(apr_data,may_data,jun_data,jul_data,aug_data,sep_data)
#structure
str(data_2014)
#Summary statistics
summary(data_2014)
data_2014$Date.Time<-as.POSIXct(data_2014$Date.Time,format = "%m/%d/%Y %H:%M:%S")
summary(data_2014)
#Extract time from date time
data_2014$Time<- format(as.POSIXct(data_2014$Date.Time,format = "%m/%d/%Y %H:%M:%S"),format = "%H:%M:%S")
ata_2014$Date.Time <- ymd_hms(data_2014$Date.Time) #formatting
data_2014$day <- format(day(data_2014$Date.Time))  #day
data_2014$month <- format(month(data_2014$Date.Time, label = TRUE))
data_2014$year <- format(year(data_2014$Date.Time))  #no meaning as we have data of 2014 only
data_2014$dayofweek <- format(wday(data_2014$Date.Time, label=TRUE))
data_2014$Date.Time <- ymd_hms(data_2014$Date.Time) #formatting
data_2014$day <- format(day(data_2014$Date.Time))  #day
data_2014$year <- format(year(data_2014$Date.Time))  #no meaning as we have data of 2014 only
data_2014$year <- format(year(data_2014$Date.Time))  #no meaning as we have data of 2014 only
data_2014$dayofweek <- format(wday(data_2014$Date.Time, label=TRUE))
data_2014$hour <- factor(hour(hms(data_2014$Time)))
data_2014$minute <- factor(minute(hms(data_2014$Time)))
data_2014$second <- factor(second(hms(data_2014$Time)))
hour_data <- data_2014 %>%
group_by(hour) %>%
summarise(Total=n())   #
#see in a tabluar form
datatable(hour_data)
#see in a tabluar form
datatable(hour_data)
datatable(hour_data)
ggplot(hour_data,aes(hour,Total))+
geom_bar(stat="identity",fill="black" , color = "blue")+
ggtitle("Trips By Hour")
theme(legend.position = "none")+
scale_y_continuous(labels = comma())
ggplot(hour_data,aes(hour,Total))+
geom_bar(stat="identity",fill="black" , color = "blue")+
ggtitle("Trips By Hour")
theme(legend.position = "none")+
scale_y_continuous(labels = comma())
ggplot(hour_data,aes(hour,Total))+
geom_bar(stat="identity",fill="black" , color = "blue")+
ggtitle("Trips By Hour")
theme(legend.position = "none")+
scale_y_continuous(labels = comma())
month_hour_data <- data_2014 %>%
group_by(month,hour) %>%
summarise(Total=n())
#see in a tabluar form
datatable(month_hour_data)
ggplot(month_hour_data,aes(hour,Total,fill = month))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month")
scale_y_continuous(labels = comma())
sept_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month="sep") %>%
summarise(Total= n())
ggplot(sept_hour,aes(hour,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month for september")
scale_y_continuous(labels = comma())
sept_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month="sep") %>%
summarise(Total= n())
ggplot(sept_hour,aes(hour,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month for september")
scale_y_continuous(labels = comma())
sept_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month="sep") %>%
summarise(Total= n())
ggplot(sept_hour,aes(hour,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month for september")
scale_y_continuous(labels = comma())
ggplot(month_hour_data,aes(hour,Total,fill = month))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month")+
scale_y_continuous(labels = comma())
sept_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month="sep") %>%
summarise(Total= n())
ggplot(sept_hour,aes(hour,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month for september")+
scale_y_continuous(labels = comma())
sept_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month="sep") %>%
summarise(Total= n())
sept_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month=="sep") %>%
summarise(Total= n())
ggplot(sept_hour,aes(hour,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month for september")+
scale_y_continuous(labels = comma())
apr_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month=="apr") %>%
summarise(Total= n())
ggplot(sept_hour,aes(hour,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month for september")+
scale_y_continuous(labels = comma)
sept_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month=="sep") %>%
summarise(Total= n())
ggplot(sept_hour,aes(hour,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month for september")+
scale_y_continuous(labels = comma)
apr_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month=="apr") %>%
summarise(Total= n())
ggplot(apr_hour,aes(hour,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month for april")+
scale_y_continuous(labels = comma)
ggplot(month_hour_data,aes(hour,Total,fill = month))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month")+
scale_y_continuous(labels = comma)
sept_hour <- data_2014 %>%
group_by(hour,month) %>%
filter(month=="sep") %>%
summarise(Total= n())
ggplot(sept_hour,aes(hour,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Hour and month for september")+
scale_y_continuous(labels = comma)
day_data <- data_2014 %>%
group_by(day) %>%
summarise(Total=n())
datatable(day_data)
ggplot(hour_data,aes(hour,Total))+
geom_bar(stat="identity",fill="black" , color = "blue")+
ggtitle("Trips By Hour")
theme(legend.position = "none")+
scale_y_continuous(labels = comma)
ggplot(day_data,aes(day,Total))+
geom_bar(stat="identity",fill="blue" , color = "black")+
ggtitle("Trips By day")
theme(legend.position = "none")+
scale_y_continuous(labels = comma)
month_day_data <- data_2014 %>%
group_by(month,day) %>%
summarise(Total=n())
#see in a tabluar form
datatable(month_day_data)
ggplot(month_day_data,aes(day,Total,fill = month))+
geom_bar(stat="identity")+
ggtitle("Trips By Day and month")+
scale_y_continuous(labels = comma)
sept_hour <- data_2014 %>%
group_by(day,month) %>%
filter(month =="sep") %>%
summarise(Total= n())
ggplot(sept_day,aes(day,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Day and month for september")+
scale_y_continuous(labels = comma)
sept_day <- data_2014 %>%
group_by(day,month) %>%
filter(month =="sep") %>%
summarise(Total= n())
ggplot(sept_day,aes(day,Total,fill = hour))+
geom_bar(stat="identity")+
ggtitle("Trips By Day and month for september")+
scale_y_continuous(labels = comma)
sept_day <- data_2014 %>%
group_by(day,month) %>%
filter(month =="sep") %>%
summarise(Total= n())
ggplot(sept_day,aes(day,Total,fill = day))+
geom_bar(stat="identity")+
ggtitle("Trips By Day and month for september")+
scale_y_continuous(labels = comma)
month_data <- data_2014 %>% group_by(month) %>% summarise(Total = n())
datatable(month_data)
ggplot(month_data,aes(month,Total fill=month))+
geom_bar(stat="identity")+
ggtitle("Trips by month")+
scale_y_continuous(labels = comma)
ggplot(month_data,aes(month,Total,fill=month))+
geom_bar(stat="identity")+
ggtitle("Trips by month")+
scale_y_continuous(labels = comma)
month_weekday_data <- data_2014 %>% group_by(month,dayofweek) %>% summarise(Total = n())
datatable(month_weekday_data)
ggplot(month_weekday_data,aes(month,Total,fill=dayofweek))+
geom_bar(stat="identity")+
ggtitle("Trips By month and weekday")+
scale_y_continuous(labels = comma)
weekday_data <- data_2014 %>% group_by(month,dayofweek) %>% summarise(Total = n())
datatable(weekday_data)
ggplot(weekday_data,aes(month,Total,fill=dayofweek))+
geom_bar(stat="identity")+
ggtitle("Trips By  weekday")+
scale_y_continuous(labels = comma)
weekday_data <- data_2014 %>% group_by(dayofweek) %>% summarise(Total = n())
datatable(weekday_data)
ggplot(weekday_data,aes(month,Total,fill=dayofweek))+
geom_bar(stat="identity")+
ggtitle("Trips By  weekday")+
scale_y_continuous(labels = comma)
weekday_data <- data_2014 %>% group_by(dayofweek) %>% summarise(Total = n())
datatable(weekday_data)
ggplot(weekday_data,aes(daysofweek,Total,fill=dayofweek))+
geom_bar(stat="identity")+
ggtitle("Trips By  weekday")+
scale_y_continuous(labels = comma)
weekday_data <- data_2014 %>% group_by(dayofweek) %>% summarise(Total = n())
datatable(weekday_data)
ggplot(weekday_data,aes(daysofweek,Total,fill=dayofweek))+
geom_bar(stat="identity")+
ggtitle("Trips By  weekday")+
scale_y_continuous(labels = comma)
weekday_data <- data_2014 %>% group_by(dayofweek) %>% summarise(Total = n())
datatable(weekday_data)
ggplot(weekday_data,aes(daysofweek,Total,fill=dayofweek))+
geom_bar(stat="identity")+
ggtitle("Trips By  weekday")+
scale_y_continuous(labels = comma)
weekday_data <- data_2014 %>% group_by(dayofweek) %>% summarise(Total = n())
datatable(weekday_data)
ggplot(weekday_data,aes(dayofweek,Total,fill=dayofweek))+
geom_bar(stat="identity")+
ggtitle("Trips By  weekday")+
scale_y_continuous(labels = comma)
ggplot(data_2014,aes(Base))+
geom_bar(fill="darkred")+
scale_y_continuous(labels = comma)+
ggtitle("Trips by bases")
ggplot(data_2014,aes(Base,fill=month))+
geom_bar(position = "dodge")+
scale_y_continuous(labels = comma)+
ggtitle("Trips by Bases and Month")
ggplot(data_2014,aes(Base,fill=dayofweek))+
geom_bar(position = "dodge")+
scale_y_continuous(labels = comma)+
ggtitle("Trips by Bases and Dayofweek")
day_and_hour<- data_2014 %>%
group_by(day,hour) %>%\
dplyr::summarise(Total= n())
datatable(day_and_hour)
ggplot(day_and_hour,aes(day,hour,fill=Total))+
geom_tile(color="white")
ggtitle("Trips by Bases and Dayofweek")
day_and_hour<- data_2014 %>%
group_by(day,hour) %>%
dplyr::summarise(Total= n())
datatable(day_and_hour)
ggplot(day_and_hour,aes(day,hour,fill=Total))+
geom_tile(color="white")
ggtitle("heat map by hor and day")
ggplot(day_and_hour,aes(day,hour,fill=Total))+
geom_tile(color="white")+
ggtitle("heat map by hor and day")
